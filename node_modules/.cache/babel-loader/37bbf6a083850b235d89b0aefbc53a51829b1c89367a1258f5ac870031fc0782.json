{"ast":null,"code":"var _jsxFileName = \"C:\\\\siteavocat-dev\\\\src\\\\components\\\\chatbot\\\\chatbot\\\\ChatInputavoca.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatInputavoca.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInputavoca = ({\n  onSendMessage\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const handleSend = () => {\n    if (input.trim() !== '') {\n      onSendMessage(input); // Send the message\n      setInput(''); // Reset the input field\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-inputa\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"sentinput\",\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleKeyPress // Handle enter key\n      ,\n      placeholder: \"Write your question here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: \"sentbt\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInputavoca, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = ChatInputavoca;\nexport default ChatInputavoca;\nvar _c;\n$RefreshReg$(_c, \"ChatInputavoca\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInputavoca","onSendMessage","_s","input","setInput","handleSend","trim","handleKeyPress","e","key","className","children","type","value","onChange","target","onKeyPress","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/siteavocat-dev/src/components/chatbot/chatbot/ChatInputavoca.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ChatInputavoca.css';\n\nconst ChatInputavoca = ({ onSendMessage }) => {\n  const [input, setInput] = useState('');\n\n  const handleSend = () => {\n    if (input.trim() !== '') {\n      onSendMessage(input); // Send the message\n      setInput(''); // Reset the input field\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  return (\n    <div className=\"chat-inputa\">\n      <input\n        className=\"sentinput\"\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyPress={handleKeyPress} // Handle enter key\n        placeholder=\"Write your question here...\"\n      />\n      <button onClick={handleSend} className=\"sentbt\">\n        Send\n      </button>\n    </div>\n  );\n};\n\nexport default ChatInputavoca;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBL,aAAa,CAACE,KAAK,CAAC,CAAC,CAAC;MACtBC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMG,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBJ,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BZ,OAAA;MACEW,SAAS,EAAC,WAAW;MACrBE,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,KAAM;MACbW,QAAQ,EAAGN,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAC1CG,UAAU,EAAET,cAAe,CAAC;MAAA;MAC5BU,WAAW,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFtB,OAAA;MAAQuB,OAAO,EAAEjB,UAAW;MAACK,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAEhD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BIF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}