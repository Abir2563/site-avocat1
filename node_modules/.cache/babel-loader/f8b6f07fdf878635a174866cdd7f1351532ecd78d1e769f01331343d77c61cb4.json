{"ast":null,"code":"var _jsxFileName = \"C:\\\\siteavocat-dev\\\\src\\\\components\\\\chat\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./chat.css\"; // Import the CSS file\nimport Navbar from \"../navbar/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const sendMessage = async () => {\n    if (userInput.trim() === \"\") return;\n    try {\n      // Send user input to backend router\n      const response = await axios.post(\"http://localhost:8080/api/chat/chat\", {\n        message: userInput\n      });\n\n      // Update chat history with both user input and bot response\n      setChatHistory([...chatHistory, {\n        user: userInput\n      }, {\n        bot: response.data.message\n      }]);\n\n      // Clear user input\n      setUserInput(\"\");\n    } catch (error) {\n      console.error(\"Error communicating with backend router:\", error);\n      // Handle error\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-container`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"NAME-CHATBOT\",\n        children: \"CHAT BOT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cadre\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-history`,\n          children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${message.bot ? \"bot-message\" : \"\"}`,\n            children: [message.user && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `user`,\n              children: message.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 32\n            }, this), message.bot && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `bot`,\n              children: message.bot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 31\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tt\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type a message...\",\n          className: `chat-input`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: `send-button`,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"WvPqyI1WsSSFBjN0ReLlGmtpCoc=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","axios","Navbar","jsxDEV","_jsxDEV","ChatInterface","_s","userInput","setUserInput","chatHistory","setChatHistory","sendMessage","trim","response","post","message","user","bot","data","error","console","handleKeyPress","e","key","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","type","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/siteavocat-dev/src/components/chat/chat.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./chat.css\"; // Import the CSS file\nimport Navbar from \"../navbar/navbar\";\n\nfunction ChatInterface() {\n  const [userInput, setUserInput] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const sendMessage = async () => {\n    if (userInput.trim() === \"\") return;\n\n    try {\n      // Send user input to backend router\n      const response = await axios.post(\"http://localhost:8080/api/chat/chat\", {\n        message: userInput,\n      });\n\n      // Update chat history with both user input and bot response\n      setChatHistory([\n        ...chatHistory,\n        { user: userInput },\n        { bot: response.data.message },\n      ]);\n\n      // Clear user input\n      setUserInput(\"\");\n    } catch (error) {\n      console.error(\"Error communicating with backend router:\", error);\n      // Handle error\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className={`chat-container`}>\n        <h1 className=\"NAME-CHATBOT\">CHAT BOT</h1>\n        <div className=\"cadre\">\n        <div className={`chat-history`}>\n          {chatHistory.map((message, index) => (\n            <div key={index} className={`${message.bot ? \"bot-message\" : \"\"}`}>\n              {message.user && <span className={`user`}>{message.user}</span>}\n              {message.bot && <span className={`bot`}>{message.bot}</span>}\n            </div>\n          ))}\n        </div>\n        </div>\n        <div className=\"tt\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type a message...\"\n          className={`chat-input`}\n        />\n        <button onClick={sendMessage} className={`send-button`}>\n          Send\n        </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}